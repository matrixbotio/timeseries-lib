name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CONTAINER_NAME: timeseries
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_AKID }}
          aws-secret-access-key: ${{ secrets.ECR_AK }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REGISTRY }}

      - name: Extract tag names
        id: tags
        uses: actions/github-script@v4
        with:
          script: return context.payload.ref.replace(/^refs\/tags\/v/, '')

      - name: Build docker image
        uses: docker/build-push-action@v2
        id: build
        with:
          context: .
          platforms: linux/amd64
          file: docker/Dockerfile
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/${{ env.CONTAINER_NAME }}:v${{ fromJSON(steps.tags.outputs.result) }}

      - name: Send notify to Telegam
        uses: KaMeHb-UA/telegram-ci-notify-action@v5
        if: ${{ always() }}
        with:
          status: ${{ steps.build.outcome }}
          bot-token: ${{ secrets.TG_NOTIFY_BOT_TOKEN }}
          chat-id: ${{ secrets.TG_NOTIFY_CHAT }}
          container-name: ${{ env.CONTAINER_NAME }}
          container-link: https://github.com/matrixbotio/wiki/wiki#timeseries-service
          skip-is-fail: true
          # always throw a critical error 'cause we're building existing release tag
          default-branch: ${{ fromJSON(steps.tags.outputs.result) }}
